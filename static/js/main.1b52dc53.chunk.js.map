{"version":3,"sources":["Wrapper.js","UserMessage.js","Chatwindow.js","InputsSection.js","Chat.js","Username.js","App.js","reportWebVitals.js","index.js"],"names":["WrapperContainer","styled","div","Wrapper","props","Fragment","children","UserMessageContainerWrapper","host","UserNameWrapper","p","UserMessageWrapper","UserMessage","isHost","user","userMessage","ChatWindowContainer","ChatWindow","scrollRef","useRef","useState","isTheSamePerson","renderChatData","chatData","map","theSamePerson","hostName","flag","setFlag","useEffect","current","scrollIntoView","setTimeout","canScroll","canScrollCallback","ref","InputSectionWrapper","FormWrapper","form","InputTextWrapper","input","ButtonWrapper","button","InputsSection","inputValue","setInputValue","userMessageRef","onSubmit","e","preventDefault","value","data","type","id","onChange","target","class","Chat","setData","isLoading","setIsLoading","setError","username","setCanScroll","fetchChatData","useCallback","a","fetch","response","ok","Error","json","key","responseData","loadedDatas","push","message","addChatDataHandler","method","body","JSON","stringify","headers","Username","length","alert","className","btn","App","setUsername","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.1b52dc53.chunk.js","sourcesContent":["import React from \"react\";\nimport styled from \"styled-components\";\n\nconst WrapperContainer = styled.div`\n  max-width: 600px;\n  width: 100%;\n  height: auto;\n\n  background-color: white;\n  padding: 20px;\n  border-radius: 20px;\n`;\n\nfunction Wrapper(props) {\n  return (\n    <React.Fragment>\n      <WrapperContainer>{props.children}</WrapperContainer>\n    </React.Fragment>\n  );\n}\n\nexport default Wrapper;\n","import React, { useState } from \"react\";\nimport styled from \"styled-components\";\n\nconst UserMessageContainerWrapper = styled.div`\n  margin-top: 5px;\n  display: flex;\n  flex-direction: column;\n  align-items: ${(props) => (props.host ? \"flex-end\" : \"flex-start\")};\n  justify-content: center;\n`;\nconst UserNameWrapper = styled.p`\n  display: ${(props) => (props.host ? \"none\" : \"block\")};\n  margin: 0 !important;\n  color: gray;\n  font-size: 16px;\n  line-height: 26px;\n  margin-right: 10px !important;\n`;\nconst UserMessageWrapper = styled.p`\n  margin: 0 !important;\n  margin-right: ${(props) => (props.host ? \"20px !important\" : \"0 !important\")};\n  font-size: 19px;\n  line-height: 29px;\n  word-break: break-all;\n  background-color: rgba(130, 70, 219, 0.42);\n  border-radius: ${(props) => (props.host ? \"20px\" : \"20px 20px 20px 20px\")};\n  padding: 5px 10px;\n  max-width: 75%;\n  color: white;\n`;\n\nfunction UserMessage(props) {\n  return (\n    <UserMessageContainerWrapper host={props.isHost}>\n      <UserNameWrapper host={props.isHost}>{`${props.user} :`}</UserNameWrapper>\n      <UserMessageWrapper host={props.isHost}>\n        {props.userMessage}\n      </UserMessageWrapper>\n    </UserMessageContainerWrapper>\n  );\n}\n\nexport default UserMessage;\n","import React, { useEffect, useState, useRef } from \"react\";\nimport styled from \"styled-components\";\nimport UserMessage from \"./UserMessage\";\nconst ChatWindowContainer = styled.div`\n  width: 100%;\n  height: 600px;\n  max-height: 600px;\n  overflow-y: scroll;\n  margin-bottom: 20px;\n  border-radius: 10px;\n  ::-webkit-scrollbar {\n    width: 6px;\n  }\n  ::-webkit-scrollbar-track {\n    background: #f1f1f1;\n  }\n  ::-webkit-scrollbar-thumb {\n    background: rgba(130, 70, 219, 0.42);\n  }\n`;\nfunction ChatWindow(props) {\n  const scrollRef = useRef(null);\n  const [isTheSamePerson, setIsTheSamePerson] = useState(true);\n  const [isHost, setIsHost] = useState(false);\n  const renderChatData = props.chatData.map((chatData) => (\n    <UserMessage\n      user={chatData.user}\n      userMessage={chatData.userMessage}\n      theSamePerson={isTheSamePerson}\n      isHost={chatData.user === props.hostName ? true : false}\n    ></UserMessage>\n  ));\n  const [flag, setFlag] = useState(true);\n\n  useEffect(() => {\n    if (flag !== false) {\n      scrollRef.current.scrollIntoView();\n      setTimeout(() => {\n        setFlag(false);\n      }, 500);\n    }\n  });\n\n  useEffect(() => {\n    if (props.canScroll) {\n      scrollRef.current.scrollIntoView();\n      setTimeout(() => {\n        props.canScrollCallback();\n      }, 500);\n    }\n  });\n\n  return (\n    <ChatWindowContainer>\n      {renderChatData}\n      <div ref={scrollRef}></div>\n    </ChatWindowContainer>\n  );\n}\n\nexport default ChatWindow;\n","import React, { useRef } from \"react\";\nimport { useState } from \"react\";\nimport styled from \"styled-components\";\n\nconst InputSectionWrapper = styled.div`\n  width: 100%;\n  height: 50px;\n  display: flex;\n  align-items: center;\n  justify-content: center;\n`;\nconst FormWrapper = styled.form`\n  display: flex;\n  align-items: center;\n  justify-content: space-between;\n  width: 100%;\n  height: 100%;\n`;\nconst InputTextWrapper = styled.input`\n  flex: 1;\n  height: 100%;\n  font-size: 24px;\n  padding-left: 25px;\n  padding-right: 25px;\n  color: rgb(154, 154, 154);\n  border: none;\n  outline: none;\n  border-radius: 20px;\n  background-color: #f1f1f1;\n`;\nconst ButtonWrapper = styled.button`\n  cursor: pointer;\n  padding-left: 25px;\n  padding-right: 25px;\n  height: 100%;\n  border: none;\n  outline: none;\n  color: white;\n  background-color: white;\n  border-radius: 20px;\n  font-size: 24px;\n  margin-left: 20px;\n  background-color: rgba(130, 70, 219, 0.42);\n`;\n\nfunction InputsSection(props) {\n  const [inputValue, setInputValue] = useState(\"\");\n  const userMessageRef = useRef(\"\");\n  const submitHandler = (e) => {\n    e.preventDefault();\n    if (userMessageRef.current.value === \"\") return;\n    setInputValue(\"\");\n    const data = {\n      user: props.hostName,\n      userMessage: userMessageRef.current.value,\n    };\n    props.chatData(data);\n  };\n  return (\n    <InputSectionWrapper>\n      <FormWrapper onSubmit={submitHandler}>\n        <InputTextWrapper\n          type=\"text\"\n          id=\"message\"\n          ref={userMessageRef}\n          value={inputValue}\n          onChange={(e) => setInputValue(e.target.value)}\n        ></InputTextWrapper>\n        <ButtonWrapper>\n          <i class=\"fas fa-paper-plane\"></i>\n        </ButtonWrapper>\n      </FormWrapper>\n    </InputSectionWrapper>\n  );\n}\n\nexport default InputsSection;\n","import React, { useCallback, useState, useEffect, useRef } from \"react\";\nimport Wrapper from \"./Wrapper\";\nimport ChatWindow from \"./Chatwindow\";\nimport InputsSection from \"./InputsSection\";\nfunction Chat(props) {\n  const [data, setData] = useState([]);\n  const [isLoading, setIsLoading] = useState(false);\n  const [error, setError] = useState(null);\n  const [hostName, setHostName] = useState(props.username);\n  const [canScroll, setCanScroll] = useState(false);\n\n  const fetchChatData = useCallback(async () => {\n    setIsLoading(true);\n    setError(null);\n    try {\n      const response = await fetch(\n        \"https://comunicator-74c17-default-rtdb.europe-west1.firebasedatabase.app/chatData.json\"\n      );\n      if (!response.ok) {\n        throw new Error(\"Something went wrong!\");\n      }\n      const responseData = await response.json();\n      const loadedDatas = [];\n      for (const key in responseData) {\n        loadedDatas.push({\n          id: key,\n          user: responseData[key].user,\n          userMessage: responseData[key].userMessage,\n        });\n      }\n      setData(loadedDatas);\n    } catch (error) {\n      setError(error.message);\n    }\n    setIsLoading(false);\n  }, []);\n\n  useEffect(() => {\n    fetchChatData();\n  }, [addChatDataHandler]);\n\n  async function addChatDataHandler(chatData) {\n    setCanScroll(true);\n    const response = await fetch(\n      \"https://comunicator-74c17-default-rtdb.europe-west1.firebasedatabase.app/chatData.json\",\n      {\n        method: \"POST\",\n        body: JSON.stringify(chatData),\n        headers: {\n          \"Content-Type\": \"application/json\",\n        },\n      }\n    );\n    const responseData = await response.json();\n  }\n  const canScrollFalse = () => {\n    setCanScroll(false);\n  };\n  return (\n    <Wrapper>\n      <ChatWindow\n        chatData={data}\n        isLoading={isLoading}\n        hostName={hostName}\n        canScroll={canScroll}\n        canScrollCallback={canScrollFalse}\n      ></ChatWindow>\n      <InputsSection\n        chatData={addChatDataHandler}\n        hostName={hostName}\n      ></InputsSection>\n    </Wrapper>\n  );\n}\n\nexport default Chat;\n","import React from \"react\";\nimport { useState } from \"react\";\nimport styled from \"./Username.module.css\";\nfunction Username(props) {\n  const [inputValue, setInputValue] = useState(\"\");\n  const setNameHandler = (e) => {\n    e.preventDefault();\n    if (inputValue === \"\") return;\n    if (inputValue.length <= 3) {\n      alert(\"more than 3 chars\");\n      return;\n    }\n    if (inputValue.length >= 15) return;\n    props.username(inputValue);\n    setInputValue(\"\");\n  };\n  return (\n    <div>\n      <form onSubmit={setNameHandler}>\n        <input\n          className={styled.form}\n          type=\"text\"\n          value={inputValue}\n          onChange={(e) => setInputValue(e.target.value)}\n        ></input>\n        <button className={styled.btn}>set name</button>\n      </form>\n    </div>\n  );\n}\n\nexport default Username;\n","import React, { useState } from \"react\";\nimport Chat from \"./Chat\";\nimport Username from \"./Username\";\nfunction App() {\n  const [username, setUsername] = useState(\"\");\n  const addUserName = (username) => {\n    setUsername(username);\n  };\n\n  return (\n    <React.Fragment>\n      {username === \"\" ? (\n        <Username username={addUserName}></Username>\n      ) : (\n        <Chat username={username}></Chat>\n      )}\n    </React.Fragment>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./index.css\";\nimport App from \"./App\";\nimport reportWebVitals from \"./reportWebVitals\";\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n);\n\nreportWebVitals();\n"],"sourceRoot":""}